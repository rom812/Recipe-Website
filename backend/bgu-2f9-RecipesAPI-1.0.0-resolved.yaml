openapi: 3.0.0
info:
  title: Recipe website API
  description: "This API powers the Recipes Website. \n\n**Client Responsibilities:**\n- Display recipes\n- Collect user input for filtering, creating, or editing recipes\n- Show appropriate success/error messages\n- Update users favourite recipes\n- Update users viewed recipes\n- Ensure correct input format from the user \n\n\n\n**Server Responsibilities:**\n- Store and manage recipe data securely\n- Authenticate and authorize users\n- Serve filtered, sorted, or paginated responses|\n- Store favourite recipes for each user\n- Store family recipes for each user\n- Store viewed recipes for each user\n"
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/bgu-2f9/RecipesAPI/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://virtserver.swaggerhub.com/bgu-2f9/RecipesWebsite/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /recipes:
    get:
      tags:
      - developers
      summary: searches recipes
      description: |
        By passing in the appropriate options, you can search for
        available recepies
      operationId: searchRecipes
      parameters:
      - name: recipeType
        in: query
        description: pass an optional search string for looking up specific type of recipes
        required: false
        schema:
          type: string
      - name: skip
        in: query
        description: number of records to skip for pagination
        required: false
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: return all the recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeStructure'
        "400":
          description: bad input parameter
  /recipes/{id}:
    get:
      tags:
      - developers
      - users
      summary: searches recipe by id
      description: |
        Get a recipe by its ID
      operationId: searchRecipeById
      parameters:
      - name: id
        in: path
        description: the id of a specific recipe
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: "return recipe with the id = {id}"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeStructure'
        "400":
          description: bad input parameter
    post:
      tags:
      - admins
      summary: adds a recipe
      description: Adds a recipe to the system
      operationId: addRecipe
      parameters:
      - name: id
        in: path
        description: the id of a specific recipe
        required: true
        schema:
          type: integer
      requestBody:
        description: Recipe item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeStructure'
      responses:
        "201":
          description: recipe created
        "400":
          description: "invalid input, object invalid"
        "409":
          description: an existing recipe already exists
  /users:
    get:
      tags:
      - developers
      - users
      summary: Get all users
      operationId: getAllUsers
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSummary'
  /users/{id}:
    get:
      tags:
      - developers
      - users
      summary: Get user details by ID
      operationId: getUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: User data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    post:
      tags:
      - admins
      summary: Register a new user
      operationId: registerUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: New user registration info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: User created successfully
        "400":
          description: Invalid user input
        "409":
          description: User already exists
          
components:
  schemas:
    RecipeStructure:
      required:
      - id
      - img
      - isGlutenFree
      - isVegan
      - isVegetarian
      - name
      - popularity
      - releaseDate
      - time
      type: object
      properties:
        img:
          type: string
          format: uri
          example: https://app.swaggerhub.com/apis/bgu-2f9/RecipesWebsite/img
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Pasta Marinara
        time:
          type: integer
          description: duration in minutes
          example: 45
        releaseDate:
          type: string
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        popularity:
          type: number
          description: Rating out of 5
          format: float
          example: 4.5
        isVegan:
          type: boolean
          example: true
        isVegetarian:
          type: boolean
          example: true
        isGlutenFree:
          type: boolean
          example: true
    User:
      required:
      - country
      - email
      - firstName
      - id
      - isAdmin
      - lastName
      - password
      - username
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        username:
          maxLength: 8
          minLength: 3
          type: string
          example: shraga
        email:
          type: string
          format: email
          example: dror@example.com
        password:
          pattern: "^(?=.*[0-9])(?=.*[^A-Za-z0-9]).{5,10}$"
          type: string
          description: "Password must be 5â€“10 chars, include a number and special char"
          example: Pa$$12
        firstName:
          type: string
          example: moshi
        lastName:
          type: string
          example: shori
        country:
          type: string
          example: Israel
        isAdmin:
          type: boolean
          example: false
        favorites:
          type: array
          example:
          - 101
          - 102
          items:
            type: integer
        myRecipes:
          type: array
          example:
          - 201
          - 202
          items:
            type: integer
        myFamilyRecipes:
          type: array
          example:
          - 301
          - 302
          items:
            type: integer
        viewedRecpies:
          type: array
          example:
          - 301
          - 302
          items:
            type: integer
    UserSummary:
      type: object
      properties:
        username:
          type: string
          example: shraga
        firstName:
          type: string
          example: moshi
        lastName:
          type: string
          example: shori
        myRecipes:
          type: array
          example:
          - 201
          - 202
          items:
            type: integer
